webpackJsonp([39],{2601:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(2602),n(2603)},2602:function(e,t,n){"use strict";var i=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),r=this&&this.__assign||function(){return(r=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++){t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0});var s="MonetizationService",o=function(e){function t(t,n,i,r,o,a,c,u,g,l,p,v,h,S,f){var d=e.call(this,g)||this;d.$rootScope=t,d.appsService=n,d.authenticationService=i,d.constants=r,d.localizationService=a,d.loggingService=c,d.analyticsService=u,d.orchestrationService=g,d.settingsService=l,d.tenantSettingsStore=p,d.tenantService=v,d.utilityService=h,d.monetizationDatabase=S,d.$q=f,d.logger=c.newLogger(s);var m=new teamspace.services.DataManagerOptions(r.urls.monetizationService.assets.type,function(e){return"assets"});m.useTeamspaceTokens=!1,m.isTransient=!0,d.assetListDataManager=o.registerManager(m);var y=new teamspace.services.DataManagerOptions(r.urls.monetizationService.offers.type,function(e){return"offer"});y.useTeamspaceTokens=!1,y.isTransient=!0,d.offerDataManager=o.registerManager(y);var A=new teamspace.services.DataManagerOptions(r.urls.monetizationService.saasState.type,function(e){return e.setupUrlWithToken});A.useTeamspaceTokens=!1,A.isTransient=!0,d.saasStateDataManager=o.registerManager(A);var b=new teamspace.services.DataManagerOptions(r.urls.monetizationService.billingRegion.type,function(e){return"billingRegion"});b.useTeamspaceTokens=!1,b.isTransient=!0,d.billingRegionDataManager=o.registerManager(b);var M=new teamspace.services.DataManagerOptions(r.urls.monetizationService.supportedBillingRegions.type,function(e){return"countries"});M.useTeamspaceTokens=!1,M.isTransient=!0,d.supportedBillingRegionsDataManager=o.registerManager(M);var C=new teamspace.services.DataManagerOptions(r.urls.monetizationService.settings.type,function(e){return"settings"});C.useTeamspaceTokens=!1,C.isTransient=!1,d.settingsDataManager=o.registerManager(C);var z=new teamspace.services.DataManagerOptions(r.urls.monetizationService.commerceAccount.type,function(e){return"commerceAccount"});return z.useTeamspaceTokens=!1,z.isTransient=!1,d.commerceAccountDataManager=o.registerManager(z),d.initializeOnAppLaunchAndReinit("launch"),d}return i(t,e),t.$inject=["$rootScope","appsService","authenticationService","constants","dataManagerService","localizationService","loggingService","analyticsService","orchestrationService","settingsService","tenantSettingsStore","tenantService","utilityService","monetizationDatabase","$q"],t.prototype.initializeOnAppLaunchAndReinit=function(e){this.logger.info("initializeOnAppLaunchAndReinit monetizationService: reason = {0}",e)},t.prototype.cleanupOnAppTeardown=function(e){this.logger.info("cleanupOnAppTeardown monetizationService: reason = {0}",e)},t.prototype.mtmaTelemetryIdentifier=function(){return s},t.prototype.getSupportedBillingRegions=function(){var e=this;if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return this.$q.resolve(null);try{var t=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getSupportedBillingRegionsFromApi(t).then(function(t){if(!t)throw e.logger.info("Empty response from getSupportedBillingRegionsFromApi request in monetizationService."),"empty response from Billing Regions API";return t})}catch(e){return this.logger.info("Error occured at getSupportedBillingRegions in monetizationService. Error {0}",e),this.$q.resolve(null)}},t.prototype.getBillingRegion=function(){var e=this;if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return this.$q.resolve(null);try{var t=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getBillingRegionCache().then(function(n){return n||e.getBillingRegionFromApi(t).then(function(e){return e})})}catch(e){return this.logger.info("Error occured at getBillingRegion in monetizationService. Error {0}",e),this.$q.resolve(null)}},t.prototype.setBillingRegion=function(e){if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return this.$q.resolve(null);try{return this.putBillingRegionCache(e)}catch(e){return this.logger.info("Error occured at setBillingRegion in monetizationService. Error {0}",e),this.$q.resolve(null)}},t.prototype.getAssets=function(e){if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return this.$q.resolve(null);var t=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getAssetsFromAPI(t,e).then(function(e){if(!e)throw"empty response from Assets API";return e})},t.prototype.getOffer=function(e){var t=this;if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return this.$q.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.getOfferFromAPI(e,n).then(function(e){return e}).catch(function(n){return t.logger.info("Error occured at getOffer in monetizationService for offerId - {0}. Error {1}",e,n),t.$q.resolve(null)})},t.prototype.getActiveSubscriptions=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.activeSubscription);return this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization)?this.getAssets(e).then(function(t){if(t&&t.length>0){var i=t.filter(function(t){return t.saasProductId==e&&t.isActive});if(i)return n.stop(),i}return n.stop(),null}).catch(function(i){t.logger.info("Error occured at getActiveSubscription in monetizationService for offerId - {0}. Error {1}",e,i);var r=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(i));return n.fail({error2:r}),t.$q.resolve(null)}):(n.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null))},t.prototype.getSaaSState=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.saaSState);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return n.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);var i=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.generateDataManagerRequestOptions(i,n).then(function(n){var r={url:""+t.utilityService.combineUriComponents(i.endpointUri,i.assetSaaSStatePath).replace("${0}",e),method:"GET",timeout:i.assetSaaSStateHttpTimeoutSeconds*t.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return t.saasStateDataManager.invoke(r,n)}).then(function(e){if(!e)throw"empty response from SaaSState API";return n.appendEventData({configUrl:e.setupUrlWithToken}),n.stop(),e}).catch(function(i){var r=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(i));return t.logger.info("Error occured at getSaaSState in monetizationService for assetId - {0}. Error {1}",e,i),n.fail({error:r,error2:r}),Promise.resolve(null)})},t.prototype.sendUserBiTelemetryForMonetizationDialogs=function(e,t,n){var i={panel:{type:e,uri:void 0,uriParams:void 0,viewId:this.utilityService.generateUUID(),region:teamspace.PanelRegion[teamspace.PanelRegion.main],previousUri:void 0,previousUriParams:void 0},dataBag:n};i.app={id:t||""},this.analyticsService.sendPanelView(i)},t.prototype.startCommerceAccountBootstrapping=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.commerceAccountBootstrapping);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return n.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableCommerceAccountBootstrapping))return n.fail({error2:"Commerce account bootstrapping for monetization feature flag is not enabled"}),this.$q.resolve(null);var i=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.authenticationService.getAuthToken(i.commerceHAPITokenResource).then(function(e){var t=new teamspace.services.DataManagerRequestOptions;return t.skipApply=!0,t.scenario=n,t.additionalHeaders={Authorization:"Bearer "+e.token},t}).then(function(n){var r={url:""+t.utilityService.combineUriComponents(i.commerceUri,i.commerceAccountBootStrapPath),method:"POST",timeout:i.offersHttpTimeoutSeconds*t.constants.timeInMiliseconds.second,skipCommonHeaders:!0,data:{country:e}};return t.commerceAccountDataManager.invoke(r,n)}).then(function(e){if(!e)throw"empty response from Commerce endpoint";var t=JSON.stringify(e);return n.appendEventData({responseData:t}),n.stop(),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),Promise.resolve(null)})},t.prototype.getBillingRegionFromApi=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.billingRegion);return this.generateDataManagerRequestOptions(e,n).then(function(n){var i={url:""+t.utilityService.combineUriComponents(e.endpointUri,e.billingRegionPath),method:"GET",timeout:1e3*e.billingRegionHttpTimeoutSeconds,skipCommonHeaders:!0};return t.billingRegionDataManager.invoke(i,n)}).then(function(e){if(e){var i=JSON.stringify(e);n.appendEventData({responseData:i})}return n.stop(),t.putBillingRegionCache(e),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),null})},t.prototype.getSupportedBillingRegionsFromApi=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.supportBillingRegions);return this.generateDataManagerRequestOptions(e,n).then(function(n){var i={url:""+t.utilityService.combineUriComponents(e.endpointUri,e.supportedBillingRegionsPath),method:"GET",timeout:1e3*e.supportedBillingRegionsHttpTimeoutSeconds,skipCommonHeaders:!0};return t.supportedBillingRegionsDataManager.invoke(i,n)}).then(function(e){if(!e)throw"empty response from GetSupportedBillingRegions";return n.stop(),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return n.fail({error:t,error2:t}),null})},t.prototype.getOfferFromAPI=function(e,t){var n=this,i=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.offers);return this.getBillingRegionCache().then(function(s){return n.generateDataManagerRequestOptions(t,i).then(function(i){var r=n.utilityService.combineUriComponents(t.endpointUri,t.offersPath,e);s&&(r=n.utilityService.appendQueryStringToUrl(r,t.billingRegionQueryString,s.country)),n.settingsService.valueAsBoolean(n.constants.settings.names.includePrivateOfferPlans)||(r=n.utilityService.appendQueryStringToUrl(r,t.saasOfferTypeQueryString,n.constants.monetization.excludePrivateOfferPlansQueryValue));var o={url:""+r,method:"GET",timeout:t.offersHttpTimeoutSeconds*n.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return n.offerDataManager.invoke(o,i)}).then(function(e){if(!e)throw"empty response from Offer";return i.appendEventData(r({},n.getOfferEventData(e))),i.stop(),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return i.fail({error:t,error2:t}),Promise.resolve(null)})})},t.prototype.getAssetsFromAPI=function(e,t){var n=this,i=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.assets);return this.getBillingRegionCache().then(function(s){return n.generateDataManagerRequestOptions(e,i).then(function(i){var r=n.utilityService.combineUriComponents(e.endpointUri,e.assetsPath);s&&(r=n.utilityService.appendQueryStringToUrl(r,e.billingRegionQueryString,s.country)),t&&(r=n.utilityService.appendQueryStringToUrl(r,e.offerIdQueryString,t));var o={url:""+r,method:"GET",timeout:e.assetsHttpTimeoutSeconds*n.constants.timeInMiliseconds.second,skipCommonHeaders:!0};return n.assetListDataManager.invoke(o,i)}).then(function(e){return e&&i.appendEventData(r({},n.getAssetsListEventData(e))),i.stop(),e}).catch(function(e){var t=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return i.fail({error:t,error2:t}),Promise.resolve(null)})})},t.prototype.getSettings=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.settings);if(!this.settingsService.valueAsBoolean(this.constants.settings.names.enableMonetization))return t.fail({error2:"monetization feature flag is not enabled"}),this.$q.resolve(null);var n=this.settingsService.valueFor(this.constants.settings.names.monetizationConstants);return this.generateDataManagerRequestOptions(n,t).then(function(t){var i={url:""+e.utilityService.combineUriComponents(n.endpointUri,n.settingsPath),method:"GET",timeout:1e3*n.settingsHttpTimeoutSeconds,skipCommonHeaders:!0};return e.settingsDataManager.invoke(i,t)}).then(function(e){if(!e)return t.fail({reason:"Empty response from Monet Settings api"}),null;var n=JSON.stringify(e);return t.appendEventData({responseData:n}),t.stop(),e}).catch(function(e){var n=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(e));return t.fail({error:n,error2:n}),null})},t.prototype.generateDataManagerRequestOptions=function(e,t){var n=this,i=e.resourceUri;return this.authenticationService.getAuthToken(i).then(function(e){var i=new teamspace.services.DataManagerRequestOptions;return i.skipApply=!0,i.scenario=t,i.additionalHeaders={Authorization:"Bearer "+e.token,"Accept-Language":n.localizationService.getLocale()},i})},t.prototype.open=function(){return this.isOpen?SkypeX.Services.SyncTasks.Resolved():this.monetizationDatabase.open()},Object.defineProperty(t.prototype,"isOpen",{get:function(){return this.monetizationDatabase.isOpen},enumerable:!0,configurable:!0}),t.prototype.getHashCode=function(e){if(e)return this.utilityService.djb2_hash(JSON.stringify(e))},t.prototype.validateCacheDataIntegrity=function(e,t){return!(!e||!t)&&t===this.getHashCode(e)},t.prototype.getBillingRegionCache=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.getBillingRegionIndexedDB);return this.open().then(function(){return t.appendEventData({event:e.constants.scenarios.extensibility.monetization.cache.openConnection}),e.monetizationDatabase.provider.openTransaction(e.monetizationDatabase.schema.stores.billing_region.name,!1,"monetizationClientCache:getCachedBillingRegion")}).then(function(n){return t.appendEventData({event:e.constants.scenarios.extensibility.monetization.cache.openTransaction}),n.store.openPrimaryKey().getAll()}).then(function(n){if(n&&n.length>0){var i=n[0];return i?i&&e.validateCacheDataIntegrity(i.billingRegion,i.hash)?(t.stop(r({},e.getBillingRegionEventData(i.billingRegion))),i.billingRegion):(t.fail({error:"Hash check mismatch",error2:"Hash check mismatch"}),null):(t.stop({message:"No Billing Region found in IndexedDB."}),null)}}).toNgPromise(this.$q).catch(function(e){var n=JSON.stringify(e);return t.fail({error:n,error2:n}),null})},t.prototype.putBillingRegionCache=function(e){var t=this,n=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.cache.setBillingRegionIndexedDB);if(e){var i=new Date,r={hash:this.getHashCode(e),insertedDate:i,billingRegion:e},s=this.$q.defer();return this.open().then(function(){return t.clearBillingRegionCache(n)}).then(function(){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.clearBillingRegion,step:"putBillingRegionCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.billing_region.name,!0,"monetizationClientCache:setCachedBillingRegion")}).then(function(e){return n.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"putBillingRegionCache"}),e.store.put(r)}).then(function(){n.stop({message:"Saved Billing Region to IndexedDB"}),s.resolve()}).catch(function(e){var i=JSON.stringify(e);return t.logger.error("Failed to set Billing Region to IndexedDB. Error: "+i),n.fail({error:i,error2:i}),s.reject(),SkypeX.Services.SyncTasks.Rejected(i)}),s.promise}this.clearBillingRegionCache(n)},t.prototype.clearBillingRegionCache=function(e){var t=this;return this.open().then(function(){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openConnection,step:"clearBillingRegionsCache"}),t.monetizationDatabase.provider.openTransaction(t.monetizationDatabase.schema.stores.billing_region.name,!0,"monetizationClientCache:clearCachedBillingRegion")}).then(function(n){return e.appendEventData({event:t.constants.scenarios.extensibility.monetization.cache.openTransaction,step:"clearBillingRegionsCache"}),SkypeX.Services.SyncTasks.whenAll([n.store.clearAllData()])}).catch(function(n){var i=JSON.stringify(n);return t.logger.error("Failed to clear cached Billing Region from IndexedDB. Error: {0}",i),e.fail({error:i,error2:i}),SkypeX.Services.SyncTasks.Rejected(n)})},t.prototype.getAssetsListEventData=function(e){var t=this;if(e){var n=[];return e.forEach(function(e){n.push(t.getAssetEventData(e))}),n}},t.prototype.getAssetEventData=function(e){if(e)return{productId:e.saasBigCatalogId,purchaseStartDate:e.purchaseStartDate,licenseCount:e.licenseCount?e.licenseCount:0,isActive:!!e.isActive&&e.isActive}},t.prototype.getOfferEventData=function(e){if(e)return{appSourceLearnMoreUrl:e.appSourceLearnMoreUrl,appSourcePurchaseUrl:e.appSourcePurchaseUrl,hasFreeTrials:e.hasFreeTrials,monetPurchaseUrl:e.monetPurchaseUrl,planCount:e.plans?e.plans.length:0,saasBigCatalogId:e.saasBigCatalogId,saasProductId:e.saasProductId,saasProductName:e.saasProductName,saasProductPublisher:e.saasProductPublisher}},t.prototype.getBillingRegionEventData=function(e){if(e)return{country:e.country,countryName:e.countryName,language:e.language,culture:e.culture}},t.prototype.isPlaceOrderDisabled=function(){var e=this,t=this.loggingService.newScenario(this.constants.scenarios.extensibility.monetization.checkPlaceOrderDisabled);return this.settingsService.valueAsBoolean(this.constants.settings.names.enableAppsPurchaseTenantSettingsCheck)&&!this.tenantSettingsStore.getSettingValue(SkypeX.Services.TenantSettingsStorageKey.isAppsPurchaseEnabled)?(t.appendEventData({reason:"BlockedByAdminFromTenantSetting"}),t.stop(),this.$q.resolve(!0)):this.settingsService.valueAsBoolean(this.constants.settings.names.enableAdminConsentCheck)?this.getSettings().then(function(n){return null==n?(t.fail({reason:"Empty response from Monet Settings api"}),e.loggingService.info("Failed to get settings from Monet Settings api"),e.$q.resolve(!0)):n.userConsentSetting==e.constants.monetization.userConsentSettingDoNotAllow?(t.appendEventData({reason:"BlockedByAdminFromConsentSetting"}),t.stop(),e.$q.resolve(!0)):e.checkTenantIdsDisabledForPurchase(t)}):this.checkTenantIdsDisabledForPurchase(t)},t.prototype.checkTenantIdsDisabledForPurchase=function(e){var t=this;return this.tenantService.getCurrentTenantId().then(function(n){try{var i=t.settingsService.valueFor(t.constants.settings.names.monetizationConstants).tenantIdsDisabledForPurchase.includes(n);return i&&e.appendEventData({reason:"TenantIdIsDisabledForPurchase"}),e.stop(),t.$q.resolve(i)}catch(n){var r=JSON.stringify(teamspace.services.AppsServiceUtils.getSafeError(n));return t.loggingService.info("Failed to get current tenant Id, error: {0}",r),e.fail(),t.$q.resolve(!0)}})},t.prototype.isInAppPurchaseAllowed=function(e){var t=this;return this.appsService.getInstalledAppForUser(e).then(function(e){var n,i,r,s;return(null===(s=null===(r=null===(i=null===(n=null===e||void 0===e?void 0:e.appEntitlement)||void 0===n?void 0:n.authorization)||void 0===i?void 0:i.permissions)||void 0===r?void 0:r.resourceSpecific)||void 0===s?void 0:s.some(function(e){return e.name===t.constants.scenarios.extensibility.monetization.permission.inAppPurchase}))?t.$q.resolve(!0):(t.loggingService.info("Manifest doesn't contain the InAppPurchase.Allow.User permission"),t.$q.resolve(!1))}).catch(function(e){return t.loggingService.error("Failed to check the InAppPurchase.Allow.User permission: {0}",e),t.$q.resolve(!1)})},t}(teamspace.services.MTMABase);t.MonetizationService=o,angular.module("teamspace.monetizationService",["skypeX.myUserPreferencesStore","teamspace.appState","teamspace.authenticationService","teamspace.constants","teamspace.dataManagerService","teamspace.loggingService","teamspace.orchestrationService","teamspace.settingsService","skypeX.tenantSettingsStore","teamspace.utilityService","skypeX.clientDatabase"]).service("monetizationService",o)},2603:function(e,t,n){"use strict";var i=this&&this.__extends||function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();Object.defineProperty(t,"__esModule",{value:!0});var r=SkypeX.Services.ConversationsStoreEvents,s=function(e){function t(t,n,i,r,s,o,a,c){var u=e.call(this)||this;return u.$q=t,u.constants=n,u.conversationsStore=i,u.chatServiceClient=r,u.cortanaSettingsHelperService=s,u.loggingService=o,u.suggestedActionsViewModelFactory=c,u.suggestedActionsStringMap={},u.suggestedActionViewModelsMap={},u.logger=o.newLogger("SuggestedActionsService"),a.registerForMtma(u),u.initializeOnAppLaunchAndReinit("SuggestedActionsService start"),u}return i(t,e),t.$inject=["$q","constants","conversationsStore","chatServiceClient","cortanaSettingsHelperService","loggingService","orchestrationService","suggestedActionsViewModelFactory"],t.prototype.initializeOnAppLaunchAndReinit=function(e){var t=this;this.logger.info("initializeOnAppLaunchAndReinit: reason = {0}",e),this.cortanaSettingsHelperService.syncSuggestionsEnabledSetting(),this.hasSubscribers()&&!this.conversationsStoreSubscription&&(this.conversationsStoreSubscription=teamspace.services.MTMASubscriptionUtility.subscribe(this.conversationsStore,function(e){return t.onConversationUpdate(e)},r.Type_Conversation))},t.prototype.cleanupOnAppTeardown=function(e){this.logger.info("cleanupOnAppTeardown: reason = {0}",e),this.suggestedActionsStringMap={},this.suggestedActionViewModelsMap={},this.conversationsStoreSubscription=void 0},t.prototype.mtmaTelemetryIdentifier=function(){return"SuggestedActionsService"},t.prototype._startedTrackingKeyForType=function(e,t){var n=this;this.hasSubscribers()||this.conversationsStoreSubscription||(this.conversationsStoreSubscription=teamspace.services.MTMASubscriptionUtility.subscribe(this.conversationsStore,function(e){return n.onConversationUpdate(e)},r.Type_Conversation)),e===teamspace.services.SuggestedActionsServiceEvents.EventType_SuggestedActionsUpdate&&(this.updateSuggestedActionsForConversation(t),this.triggerSuggestedActionsUpdateForConversation(t))},t.prototype._stoppedTrackingKeyForType=function(e,t){e===teamspace.services.SuggestedActionsServiceEvents.EventType_SuggestedActionsUpdate&&(delete this.suggestedActionsStringMap[t],delete this.suggestedActionViewModelsMap[t]),!this.hasSubscribers()&&this.conversationsStoreSubscription&&(teamspace.services.MTMASubscriptionUtility.unsubscribe(this.conversationsStore,this.conversationsStoreSubscription),this.conversationsStoreSubscription=void 0)},t.prototype.onConversationUpdate=function(e){this.hasKeyedSubscribers(e)&&this.updateSuggestedActionsForConversation(e)&&this.triggerSuggestedActionsUpdateForConversation(e)},t.prototype.updateSuggestedActionsForConversation=function(e){var t=this.conversationsStore.dangerousGetConversationMutable(e);if(t){var n=t.getSuggestedActions();if(this.suggestedActionsStringMap[e]!==n)return this.suggestedActionsStringMap[e]=n,this.suggestedActionViewModelsMap[e]=[],n&&(this.suggestedActionViewModelsMap[e]=this.suggestedActionsViewModelFactory.deserializeSuggestedActions(e,n,this.constants.messageSuggestedActionConstants.maxSuggestedActionsPerConversation)),!0}return!1},t.prototype.triggerSuggestedActionsUpdateForConversation=function(e){this.trigger(teamspace.services.SuggestedActionsServiceEvents.EventType_SuggestedActionsUpdate,e,this.suggestedActionViewModelsMap[e])},t.prototype.deleteSuggestedAction=function(e,t){return this.updateSuggestedAction(e,t,null)},t.prototype.updateSuggestedAction=function(e,t,n){var i=this,r=n?this.constants.scenarios.extensibility.messageAugmentation.update:this.constants.scenarios.extensibility.messageAugmentation.delete,s=this.loggingService.newScenario(r),o=_.clone(this.suggestedActionViewModelsMap[e]),a=_.findIndex(o,function(e){return e.messageId===t});if(a>=0){n?o.splice(a,1,n):o.splice(a,1);var c=this.suggestedActionsViewModelFactory.serializeSuggestedActions(o);return this.conversationsStore.patchConversation(e,function(e){e.properties[SkypeX.Services.ChatServiceUtils.ConversationProp_SuggestedActions]=c}).then(function(){i.chatServiceClient.setConversationProperty(e,SkypeX.Services.ChatServiceUtils.ConversationProp_SuggestedActions,c).then(function(){s.stop()}).catch(function(t){i.logger.warn("Failed to update suggested actions for conversation {0}",e),s.fail({error:t})})}).catch(function(e){s.fail({error:e})})}return s.cancel({message:"message not found"}),this.$q.reject("message not found")},t}(SkypeX.Services.ObservableBase);t.SuggestedActionsServiceImplementation=s,angular.module("teamspace.suggestedActionsService",[]).service("suggestedActionsService",s)}},[2601]);